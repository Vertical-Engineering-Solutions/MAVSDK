// WARNING: THIS FILE IS AUTOGENERATED! As such, it should not be edited.
// Edits need to be made to the proto files
// (see https://github.com/mavlink/MAVSDK-Proto/blob/main/protos/PluginRC/PluginRC.proto)

#pragma once



#if not defined(AEROX_IS_WINDOWS)

#include <array>
#include <cmath>
#include <functional>
#include <limits>
#include <memory>
#include <string>
#include <utility>
#include <vector>

#include "plugin_base.h"

namespace mavsdk {

class System;
class PluginRCImpl;

/**
 * @brief Allow users to get vehicle RC channels information
 * and set PluginRC update rates.
 */
class PluginRC : public PluginBase {
public:
    /**
     * @brief Constructor. Creates the plugin for a specific System.
     *
     * The plugin is typically created as shown below:
     *
     *     ```cpp
     *     auto pluginRC = PluginRC(system);
     *     ```
     *
     * @param system The specific system associated with this plugin.
     */
    explicit PluginRC(System& _system); // deprecated

    /**
     * @brief Constructor. Creates the plugin for a specific System.
     *
     * The plugin is typically created as shown below:
     *
     *     ```cpp
     *     auto pluginRC = PluginRC(system);
     *     ```
     *
     * @param system The specific system associated with this plugin.
     */
    explicit PluginRC(std::shared_ptr<System> _system); // new

    /**
     * @brief Destructor (internal use only).
     */
    ~PluginRC();

    /**
     * @brief Remote control channels type.
     */

    struct RcChannels
    {
        RcChannels():channels(18){};
        std::vector<float> channels;
        bool status;
    };

    /**
     * @brief Stream operator to print information about a `PluginRC::RcChannels`.
     *
     * @return A reference to the stream.
     */    
    friend std::ostream& operator<<(std::ostream& str, PluginRC::RcChannels const& rc_channels);


    /**
     * @brief Possible results returned for PluginRC requests.
     */
    enum class Result {
        Unknown, /**< @brief Unknown result. */
        Success, /**< @brief Success: the PluginRC command was accepted by the vehicle. */
        NoSystem, /**< @brief No system connected. */
        ConnectionError, /**< @brief Connection error. */
        Busy, /**< @brief Vehicle is busy. */
        CommandDenied, /**< @brief Command refused by vehicle. */
        Timeout, /**< @brief Request timed out. */
        Unsupported, /**< @brief Request not supported. */
    };

    /**
     * @brief Stream operator to print information about a `PluginRC::Result`.
     *
     * @return A reference to the stream.
     */
    friend std::ostream& operator<<(std::ostream& str, PluginRC::Result const& result);

    /**
     * @brief Callback type for asynchronous PluginRC calls.
     */
    using ResultCallback = std::function<void(Result)>;


    /**
     * @brief Callback type for subscribe_rc_channels.
     */    
    using RcChannelsCallback = std::function<void(RcChannels)>;

    /**
     * @brief Subscribe to 'RC channels' updates.
     */
    void subscribe_rc_channels(RcChannelsCallback _callback);

    /**
     * @brief Poll for 'RcChannels' (blocking).
     *
     * @return One RcStatus update.
     */    
    RcChannels rc_channels() const;

    /**
     * @brief Copy constructor.
     */
    PluginRC(const PluginRC& other);

    /**
     * @brief Equality operator (object is not copyable).
     */
    const PluginRC& operator=(const PluginRC&) = delete;

private:
    /** @private Underlying implementation, set at instantiation */
    std::unique_ptr<PluginRCImpl> impl_;
};

} // namespace mavsdk

#endif
